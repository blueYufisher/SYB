package cn.edu.gdut.llc.mybatis.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TypeExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public TypeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTypeTitleIsNull() {
            addCriterion("type_title is null");
            return (Criteria) this;
        }

        public Criteria andTypeTitleIsNotNull() {
            addCriterion("type_title is not null");
            return (Criteria) this;
        }

        public Criteria andTypeTitleEqualTo(String value) {
            addCriterion("type_title =", value, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleNotEqualTo(String value) {
            addCriterion("type_title <>", value, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleGreaterThan(String value) {
            addCriterion("type_title >", value, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleGreaterThanOrEqualTo(String value) {
            addCriterion("type_title >=", value, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleLessThan(String value) {
            addCriterion("type_title <", value, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleLessThanOrEqualTo(String value) {
            addCriterion("type_title <=", value, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleLike(String value) {
            addCriterion("type_title like", value, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleNotLike(String value) {
            addCriterion("type_title not like", value, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleIn(List<String> values) {
            addCriterion("type_title in", values, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleNotIn(List<String> values) {
            addCriterion("type_title not in", values, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleBetween(String value1, String value2) {
            addCriterion("type_title between", value1, value2, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeTitleNotBetween(String value1, String value2) {
            addCriterion("type_title not between", value1, value2, "typeTitle");
            return (Criteria) this;
        }

        public Criteria andTypeUrlIsNull() {
            addCriterion("type_url is null");
            return (Criteria) this;
        }

        public Criteria andTypeUrlIsNotNull() {
            addCriterion("type_url is not null");
            return (Criteria) this;
        }

        public Criteria andTypeUrlEqualTo(String value) {
            addCriterion("type_url =", value, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlNotEqualTo(String value) {
            addCriterion("type_url <>", value, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlGreaterThan(String value) {
            addCriterion("type_url >", value, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlGreaterThanOrEqualTo(String value) {
            addCriterion("type_url >=", value, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlLessThan(String value) {
            addCriterion("type_url <", value, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlLessThanOrEqualTo(String value) {
            addCriterion("type_url <=", value, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlLike(String value) {
            addCriterion("type_url like", value, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlNotLike(String value) {
            addCriterion("type_url not like", value, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlIn(List<String> values) {
            addCriterion("type_url in", values, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlNotIn(List<String> values) {
            addCriterion("type_url not in", values, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlBetween(String value1, String value2) {
            addCriterion("type_url between", value1, value2, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeUrlNotBetween(String value1, String value2) {
            addCriterion("type_url not between", value1, value2, "typeUrl");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdIsNull() {
            addCriterion("type_parent_id is null");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdIsNotNull() {
            addCriterion("type_parent_id is not null");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdEqualTo(Integer value) {
            addCriterion("type_parent_id =", value, "typeParentId");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdNotEqualTo(Integer value) {
            addCriterion("type_parent_id <>", value, "typeParentId");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdGreaterThan(Integer value) {
            addCriterion("type_parent_id >", value, "typeParentId");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("type_parent_id >=", value, "typeParentId");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdLessThan(Integer value) {
            addCriterion("type_parent_id <", value, "typeParentId");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdLessThanOrEqualTo(Integer value) {
            addCriterion("type_parent_id <=", value, "typeParentId");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdIn(List<Integer> values) {
            addCriterion("type_parent_id in", values, "typeParentId");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdNotIn(List<Integer> values) {
            addCriterion("type_parent_id not in", values, "typeParentId");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdBetween(Integer value1, Integer value2) {
            addCriterion("type_parent_id between", value1, value2, "typeParentId");
            return (Criteria) this;
        }

        public Criteria andTypeParentIdNotBetween(Integer value1, Integer value2) {
            addCriterion("type_parent_id not between", value1, value2, "typeParentId");
            return (Criteria) this;
        }

        public Criteria andIsParentIsNull() {
            addCriterion("is_parent is null");
            return (Criteria) this;
        }

        public Criteria andIsParentIsNotNull() {
            addCriterion("is_parent is not null");
            return (Criteria) this;
        }

        public Criteria andIsParentEqualTo(Boolean value) {
            addCriterion("is_parent =", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentNotEqualTo(Boolean value) {
            addCriterion("is_parent <>", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentGreaterThan(Boolean value) {
            addCriterion("is_parent >", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_parent >=", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentLessThan(Boolean value) {
            addCriterion("is_parent <", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentLessThanOrEqualTo(Boolean value) {
            addCriterion("is_parent <=", value, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentIn(List<Boolean> values) {
            addCriterion("is_parent in", values, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentNotIn(List<Boolean> values) {
            addCriterion("is_parent not in", values, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentBetween(Boolean value1, Boolean value2) {
            addCriterion("is_parent between", value1, value2, "isParent");
            return (Criteria) this;
        }

        public Criteria andIsParentNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_parent not between", value1, value2, "isParent");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNull() {
            addCriterion("created is null");
            return (Criteria) this;
        }

        public Criteria andCreatedIsNotNull() {
            addCriterion("created is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedEqualTo(Date value) {
            addCriterion("created =", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotEqualTo(Date value) {
            addCriterion("created <>", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThan(Date value) {
            addCriterion("created >", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedGreaterThanOrEqualTo(Date value) {
            addCriterion("created >=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThan(Date value) {
            addCriterion("created <", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedLessThanOrEqualTo(Date value) {
            addCriterion("created <=", value, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedIn(List<Date> values) {
            addCriterion("created in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotIn(List<Date> values) {
            addCriterion("created not in", values, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedBetween(Date value1, Date value2) {
            addCriterion("created between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andCreatedNotBetween(Date value1, Date value2) {
            addCriterion("created not between", value1, value2, "created");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNull() {
            addCriterion("updated is null");
            return (Criteria) this;
        }

        public Criteria andUpdatedIsNotNull() {
            addCriterion("updated is not null");
            return (Criteria) this;
        }

        public Criteria andUpdatedEqualTo(Date value) {
            addCriterion("updated =", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotEqualTo(Date value) {
            addCriterion("updated <>", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThan(Date value) {
            addCriterion("updated >", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedGreaterThanOrEqualTo(Date value) {
            addCriterion("updated >=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThan(Date value) {
            addCriterion("updated <", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedLessThanOrEqualTo(Date value) {
            addCriterion("updated <=", value, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedIn(List<Date> values) {
            addCriterion("updated in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotIn(List<Date> values) {
            addCriterion("updated not in", values, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedBetween(Date value1, Date value2) {
            addCriterion("updated between", value1, value2, "updated");
            return (Criteria) this;
        }

        public Criteria andUpdatedNotBetween(Date value1, Date value2) {
            addCriterion("updated not between", value1, value2, "updated");
            return (Criteria) this;
        }

        public Criteria andTypeIconIsNull() {
            addCriterion("type_icon is null");
            return (Criteria) this;
        }

        public Criteria andTypeIconIsNotNull() {
            addCriterion("type_icon is not null");
            return (Criteria) this;
        }

        public Criteria andTypeIconEqualTo(String value) {
            addCriterion("type_icon =", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconNotEqualTo(String value) {
            addCriterion("type_icon <>", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconGreaterThan(String value) {
            addCriterion("type_icon >", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconGreaterThanOrEqualTo(String value) {
            addCriterion("type_icon >=", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconLessThan(String value) {
            addCriterion("type_icon <", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconLessThanOrEqualTo(String value) {
            addCriterion("type_icon <=", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconLike(String value) {
            addCriterion("type_icon like", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconNotLike(String value) {
            addCriterion("type_icon not like", value, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconIn(List<String> values) {
            addCriterion("type_icon in", values, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconNotIn(List<String> values) {
            addCriterion("type_icon not in", values, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconBetween(String value1, String value2) {
            addCriterion("type_icon between", value1, value2, "typeIcon");
            return (Criteria) this;
        }

        public Criteria andTypeIconNotBetween(String value1, String value2) {
            addCriterion("type_icon not between", value1, value2, "typeIcon");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table type
     *
     * @mbggenerated do_not_delete_during_merge Sat Apr 21 19:07:34 CST 2018
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table type
     *
     * @mbggenerated Sat Apr 21 19:07:34 CST 2018
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}