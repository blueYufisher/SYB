<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.gdut.llc.mybatis.mapper.self.SelfUserMapper">
    <resultMap id="BaseResultMap" type="cn.edu.gdut.llc.mybatis.model.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Feb 11 16:51:59 CST 2018.
        -->
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="mail" jdbcType="VARCHAR" property="mail"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="weichat" jdbcType="VARCHAR" property="weichat"/>
        <result column="userface" jdbcType="VARCHAR" property="userface"/>
        <result column="depart_id" jdbcType="INTEGER" property="departId"/>
        <result column="log_count" jdbcType="INTEGER" property="logCount"/>
        <result column="log_time" jdbcType="TIMESTAMP" property="logTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="ip_address" jdbcType="VARCHAR" property="ipAddress"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="role" jdbcType="INTEGER" property="role"/>
    </resultMap>
    <resultMap id="lazyLoadRoles" type="cn.edu.gdut.llc.mybatis.model.self.SelfUser" extends="BaseResultMap">
        <collection property="roles" ofType="cn.edu.gdut.llc.mybatis.model.Role" select="cn.edu.gdut.llc.mybatis.mapper.self.SelfUserMapper.getRolesByUserId"
                    column="id"></collection>
    </resultMap>
    <resultMap id="eagerLoadRoles" type="cn.edu.gdut.llc.mybatis.model.self.SelfUser">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="real_name" jdbcType="VARCHAR" property="realName"/>
        <result column="user_name" jdbcType="VARCHAR" property="userName"/>
        <result column="password" jdbcType="VARCHAR" property="password"/>
        <result column="sex" jdbcType="VARCHAR" property="sex"/>
        <result column="phone" jdbcType="VARCHAR" property="phone"/>
        <result column="mail" jdbcType="VARCHAR" property="mail"/>
        <result column="qq" jdbcType="VARCHAR" property="qq"/>
        <result column="weichat" jdbcType="VARCHAR" property="weichat"/>
        <result column="userface" jdbcType="VARCHAR" property="userface"/>
        <result column="depart_id" jdbcType="INTEGER" property="departId"/>
        <result column="log_count" jdbcType="INTEGER" property="logCount"/>
        <result column="log_time" jdbcType="TIMESTAMP" property="logTime"/>
        <result column="remark" jdbcType="VARCHAR" property="remark"/>
        <result column="ip_address" jdbcType="VARCHAR" property="ipAddress"/>
        <result column="state" jdbcType="INTEGER" property="state"/>
        <result column="role" jdbcType="INTEGER" property="role"/>
        <collection property="roles" ofType="cn.edu.gdut.llc.mybatis.model.Role">
            <id column="rid" jdbcType="INTEGER" property="rid" />
            <result column="name" jdbcType="VARCHAR" property="name" />
            <result column="nameZh" jdbcType="VARCHAR" property="namezh" />
        </collection>
    </resultMap>
    <insert id="insertUserReturnID" parameterType="cn.edu.gdut.llc.mybatis.model.User">
        <!--
          WARNING - @mbggenerated
          This element is automatically generated by MyBatis Generator, do not modify.
          This element was generated on Sun Feb 11 16:51:59 CST 2018.
        -->
        insert into user (id, real_name, user_name, password, sex, phone, mail, qq, weichat, userface, depart_id, log_count,
        log_time, remark, ip_address, state, role)
        values (#{id,jdbcType=INTEGER}, #{realName,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR},
        #{password,jdbcType=VARCHAR}, #{sex,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
        #{mail,jdbcType=VARCHAR}, #{qq,jdbcType=VARCHAR}, #{weichat,jdbcType=VARCHAR},
        #{userface,jdbcType=VARCHAR}, #{departId,jdbcType=INTEGER}, #{logCount,jdbcType=INTEGER},
        #{logTime,jdbcType=TIMESTAMP}, #{remark,jdbcType=VARCHAR}, #{ipAddress,jdbcType=VARCHAR},
        #{state,jdbcType=INTEGER}, #{role,jdbcType=INTEGER})
        <selectKey keyProperty="id" order="AFTER" resultType="Integer">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>
    <select id="loadUserByUsername" resultMap="lazyLoadRoles">
        SELECT * FROM user WHERE user_name=#{username};
    </select>
    <select id="getRolesByUserId" resultType="cn.edu.gdut.llc.mybatis.model.Role">
        SELECT r.* FROM user_role u,role r WHERE u.`role_id`=r.`rid` AND u.`user_id`=#{id}
    </select>
    <insert id="userReg">
        INSERT INTO user set user_name=#{user_name},password=#{password}
    </insert>
    <select id="getUsersByKeywords" resultMap="eagerLoadRoles">
        SELECT u.*,
        `r`.`rid`,
        `r`.`name`,
        `r`.`nameZh`
        FROM (
        (`user` `u` LEFT JOIN `user_role` `u_r` ON ((`u`.`id` = `u_r`.`user_id`)))
        LEFT JOIN `role` `r` ON ((`u_r`.`role_id` = `r`.`rid`))
        )
        WHERE u.`id` NOT IN(SELECT u_r.`user_id` FROM user_role u_r,role r WHERE u_r.`role_id`=r.`rid` AND r.`nameZh`='系统管理员')
        <if test="keywords!='all' and keywords!=''">
            AND u.`real_name` LIKE concat('%',#{keywords},'%')
        </if>
        ORDER BY u.`id` LIMIT 10

    </select>
    <select id="getUserById" resultMap="eagerLoadRoles">
        SELECT u.*,
            `r`.`rid`,
            `r`.`name`,
            `r`.`nameZh`
        FROM (
            (`user` `u` LEFT JOIN `user_role` `u_r` ON ((`u`.`id` = `u_r`.`user_id`)))
            LEFT JOIN `role` `r` ON ((`u_r`.`role_id` = `r`.`rid`)))
        WHERE u.`id`=#{userId}
    </select>
    <!--<update id="updateUser" parameterType="cn.edu.gdut.llc.mybatis.model.User">-->
        <!--update hr-->
        <!--<set>-->
            <!--<if test="name != null">-->
                <!--name = #{name,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="phone != null">-->
                <!--phone = #{phone,jdbcType=CHAR},-->
            <!--</if>-->
            <!--<if test="telephone != null">-->
                <!--telephone = #{telephone,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="address != null">-->
                <!--address = #{address,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="enabled != null">-->
                <!--enabled = #{enabled,jdbcType=BIT},-->
            <!--</if>-->
            <!--<if test="username != null">-->
                <!--username = #{username,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="password != null">-->
                <!--password = #{password,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="userface != null">-->
                <!--userface = #{userface,jdbcType=VARCHAR},-->
            <!--</if>-->
            <!--<if test="remark != null">-->
                <!--remark = #{remark,jdbcType=VARCHAR},-->
            <!--</if>-->
        <!--</set>-->
        <!--where id = #{id}-->
    <!--</update>-->
    <delete id="deleteRoleByUserId" parameterType="int">
        DELETE FROM user_role where user_id=#{userId}
    </delete>
    <insert id="addRolesForUser">
        INSERT INTO user_role(user_id,role_id) VALUES
        <foreach collection="rids" separator="," item="rid">
            (#{paramObj.id},#{rid})
        </foreach>
    </insert>
    <delete id="deleteUser" parameterType="int">
        DELETE FROM user WHERE id=#{userId}
    </delete>
    <select id="getAllUser" resultType="cn.edu.gdut.llc.mybatis.model.User">
        select * from user
        <if test="userId!=null">
            WHERE id !=#{userId}
        </if>
    </select>
</mapper>